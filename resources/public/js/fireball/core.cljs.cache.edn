;; Analyzed by ClojureScript 1.7.170
{:use-macros {defui om.next}, :excludes #{}, :name fireball.core, :imports nil, :requires {goog.dom goog.dom, externals.react externals.react, dom om.dom, motion externals.react-motion, om.dom om.dom, pp cljs.pprint, externals.react-motion externals.react-motion, cljs.pprint cljs.pprint, gdom goog.dom, om om.next, om.next om.next, rt externals.react}, :uses nil, :defs {Dinosaur {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name fireball.core/Dinosaur, :variadic false, :file "src/fireball/core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, rest-or-vector {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 16, :column 7, :end-line 16, :end-column 21, :arglists (quote ([[_ & rest]]))}, :name fireball.core/rest-or-vector, :variadic false, :file "src/fireball/core.cljs", :end-column 21, :method-params ([p__32043]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[_ & rest]]))}, calc-angle-from-cursor {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 19, :column 7, :end-line 19, :end-column 29, :arglists (quote ([e]))}, :name fireball.core/calc-angle-from-cursor, :variadic false, :file "src/fireball/core.cljs", :end-column 29, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, mutate {:name fireball.core/mutate, :file "src/fireball/core.cljs", :line 34, :column 1, :end-line 34, :end-column 17, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 34, :column 11, :end-line 34, :end-column 17}}, Canvas {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name fireball.core/Canvas, :variadic false, :file "src/fireball/core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, read {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 28, :column 7, :end-line 28, :end-column 11, :arglists (quote ([{:keys [state], :as env} key params]))}, :name fireball.core/read, :variadic false, :file "src/fireball/core.cljs", :end-column 11, :method-params ([p__32046 key params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [state], :as env} key params]))}, reconciler {:name fireball.core/reconciler, :file "src/fireball/core.cljs", :line 108, :column 1, :end-line 108, :end-column 16, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 108, :column 6, :end-line 108, :end-column 16}}, handle-click {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 54, :column 7, :end-line 54, :end-column 19, :arglists (quote ([e this]))}, :name fireball.core/handle-click, :variadic false, :file "src/fireball/core.cljs", :end-column 19, :method-params ([e this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e this]))}, dinosaur {:name fireball.core/dinosaur, :file "src/fireball/core.cljs", :line 92, :column 1, :end-line 92, :end-column 14, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 92, :column 6, :end-line 92, :end-column 14}}, app-state {:name fireball.core/app-state, :file "src/fireball/core.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 11, :column 10, :end-line 11, :end-column 19}}, Fireball {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name fireball.core/Fireball, :variadic false, :file "src/fireball/core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, handle-move {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 60, :column 7, :end-line 60, :end-column 18, :arglists (quote ([e this]))}, :name fireball.core/handle-move, :variadic false, :file "src/fireball/core.cljs", :end-column 18, :method-params ([e this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e this]))}, fireball {:name fireball.core/fireball, :file "src/fireball/core.cljs", :line 82, :column 1, :end-line 82, :end-column 14, :meta {:file "/Users/bendyorke/Code/fireball/src/fireball/core.cljs", :line 82, :column 6, :end-line 82, :end-column 14}}}, :require-macros {om om.next, om.next om.next, dom om.dom, om.dom om.dom, pp cljs.pprint, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:y :read :om.next/queries :config :default :value :fireballs :keyfn :state :angle fireball/destroy dinosaur/rotate :parser :keys :not-found :indexer :action :t :x fireball/create :hierarchy :mutate}, :order [:fireballs :angle :state :value :not-found :hierarchy :default fireball/create :action :keys fireball/destroy dinosaur/rotate :x :y :t :config :indexer :om.next/queries :keyfn :parser :read :mutate]}, :doc nil}